{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport fire from \"./fire\";\nexport function sendApiRequest(UPC) {\n  var APP_ID, API_KEY;\n  return _regeneratorRuntime.async(function sendApiRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          APP_ID = \"d6a2d254\";\n          API_KEY = \"893c02ccf6f4bb530970aa7d0b4a39fa\";\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('https://api.edamam.com/api/food-database/v2/parser?upc=' + UPC + '&app_id=' + APP_ID + '&app_key=' + API_KEY).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (typeof data.hints == \"undefined\") {\n              storeToDatabase(-1);\n            } else {\n              var calories = data.hints[0].food.nutrients.ENERC_KCAL;\n              storeToDatabase(calories);\n            }\n          }));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction storeToDatabase(calories) {\n  fire.database().ref('users/' + fire.auth().currentUser.email.replace('.', ',')).update({\n    caloriesConsumed: Math.round(calories)\n  });\n}","map":{"version":3,"sources":["C:/Users/funkw/Desktop/weightapp/COVID-NineTeam/components/Edamam.js"],"names":["fire","sendApiRequest","UPC","APP_ID","API_KEY","fetch","then","response","json","data","hints","storeToDatabase","calories","food","nutrients","ENERC_KCAL","database","ref","auth","currentUser","email","replace","update","caloriesConsumed","Math","round"],"mappings":";AAAA,OAAOA,IAAP;AAEA,OAAO,SAAeC,cAAf,CAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAECC,UAAAA,MAFD,GAEU,UAFV;AAICC,UAAAA,OAJD,GAIW,kCAJX;AAAA;AAAA,2CAMGC,KAAK,CAAC,4DAA4DH,GAA5D,GAAkE,UAAlE,GAA+EC,MAA/E,GAAwF,WAAxF,GAAqGC,OAAtG,CAAL,CAAoHE,IAApH,CAAyH,UAAAC,QAAQ,EAAI;AACvI,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AAEH,WAHK,EAGHF,IAHG,CAGE,UAACG,IAAD,EAAU;AACd,gBAAG,OAAOA,IAAI,CAACC,KAAZ,IAAqB,WAAxB,EAAqC;AACjCC,cAAAA,eAAe,CAAC,CAAC,CAAF,CAAf;AACH,aAFD,MAGK;AAED,kBAAMC,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcG,IAAd,CAAmBC,SAAnB,CAA6BC,UAA9C;AACAJ,cAAAA,eAAe,CAACC,QAAD,CAAf;AACH;AACJ,WAZK,CANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBP,SAASD,eAAT,CAAyBC,QAAzB,EAAmC;AAC3BZ,EAAAA,IAAI,CACHgB,QADD,GAECC,GAFD,CAEK,WAAWjB,IAAI,CAACkB,IAAL,GAAYC,WAAZ,CAAwBC,KAAxB,CAA8BC,OAA9B,CAAsC,GAAtC,EAA0C,GAA1C,CAFhB,EAGCC,MAHD,CAGQ;AACJC,IAAAA,gBAAgB,EAAEC,IAAI,CAACC,KAAL,CAAWb,QAAX;AADd,GAHR;AAMP","sourcesContent":["import fire from './fire';\r\n// background function for api response for the barcode scanner\r\nexport async function sendApiRequest(UPC) {\r\n    // application identifiers for edamam\r\n    let APP_ID = \"d6a2d254\";\r\n    //app access key for edamam\r\n    let API_KEY = \"893c02ccf6f4bb530970aa7d0b4a39fa\";\r\n    //waits for the api server to return a response and presents a return json file with all food info\r\n    await fetch('https://api.edamam.com/api/food-database/v2/parser?upc=' + UPC + '&app_id=' + APP_ID + '&app_key='+ API_KEY).then(response => {\r\n        return response.json();\r\n        //converts response from server to readable json file\r\n    }).then((data) => {\r\n        if(typeof data.hints == \"undefined\") { //If Edamam doesn't have the UPC\r\n            storeToDatabase(-1);\r\n        }\r\n        else {\r\n            //searches json file for specified calorie value, may be changed to present different things to the barcode scanner\r\n            const calories = data.hints[0].food.nutrients.ENERC_KCAL;\r\n            storeToDatabase(calories);\r\n        }\r\n    })\r\n}\r\n// stores calorie value into firebase database\r\nfunction storeToDatabase(calories) {\r\n        fire\r\n        .database()\r\n        .ref('users/' + fire.auth().currentUser.email.replace('.',','))\r\n        .update({\r\n            caloriesConsumed: Math.round(calories),\r\n        });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}