{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\funkw\\\\Desktop\\\\weightapp\\\\COVID-NineTeam\\\\node_modules\\\\@react-native-picker\\\\picker\\\\js\\\\Picker.web.js\";\n\nimport React from 'react';\nimport createElement from \"react-native-web/dist/exports/createElement\";\nimport unstable_createElement from \"react-native-web/dist/exports/createElement\";\nimport PickerItem from \"./PickerItem\";\nimport { forwardRef, useRef } from 'react';\nvar myCreateElement = createElement || unstable_createElement;\nvar Select = forwardRef(function (props, forwardedRef) {\n  return myCreateElement('select', props);\n});\nvar Picker = forwardRef(function (props, forwardedRef) {\n  var enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      dropdownIconColor = props.dropdownIconColor,\n      other = _objectWithoutProperties(props, [\"enabled\", \"onValueChange\", \"selectedValue\", \"itemStyle\", \"mode\", \"prompt\", \"dropdownIconColor\"]);\n\n  var hostRef = useRef(null);\n  var handleChange = React.useCallback(function (e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }, [onValueChange]);\n  return React.createElement(Select, _extends({\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    ref: hostRef,\n    value: selectedValue\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }));\n});\nPicker.Item = PickerItem;\nexport default Picker;","map":{"version":3,"sources":["C:/Users/funkw/Desktop/weightapp/COVID-NineTeam/node_modules/@react-native-picker/picker/js/Picker.web.js"],"names":["React","PickerItem","forwardRef","useRef","myCreateElement","createElement","unstable_createElement","Select","props","forwardedRef","Picker","enabled","onValueChange","selectedValue","itemStyle","mode","prompt","dropdownIconColor","other","hostRef","handleChange","useCallback","e","target","selectedIndex","value","undefined","Item"],"mappings":";;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;;;AAQA,OAAOC,UAAP;AACA,SAAQC,UAAR,EAAoBC,MAApB,QAAiC,OAAjC;AAoBA,IAAMC,eAAe,GAAGC,aAAa,IAAIC,sBAAzC;AAEA,IAAMC,MAAM,GAAGL,UAAU,CAAC,UAACM,KAAD,EAAaC,YAAb;AAAA,SACxBL,eAAe,CAAC,QAAD,EAAWI,KAAX,CADS;AAAA,CAAD,CAAzB;AAIA,IAAME,MAAM,GAAGR,UAAU,CAAiB,UAACM,KAAD,EAAQC,YAAR,EAAyB;AAAA,MAE/DE,OAF+D,GAU7DH,KAV6D,CAE/DG,OAF+D;AAAA,MAG/DC,aAH+D,GAU7DJ,KAV6D,CAG/DI,aAH+D;AAAA,MAI/DC,aAJ+D,GAU7DL,KAV6D,CAI/DK,aAJ+D;AAAA,MAK/DC,SAL+D,GAU7DN,KAV6D,CAK/DM,SAL+D;AAAA,MAM/DC,IAN+D,GAU7DP,KAV6D,CAM/DO,IAN+D;AAAA,MAO/DC,MAP+D,GAU7DR,KAV6D,CAO/DQ,MAP+D;AAAA,MAQ/DC,iBAR+D,GAU7DT,KAV6D,CAQ/DS,iBAR+D;AAAA,MAS5DC,KAT4D,4BAU7DV,KAV6D;;AAYjE,MAAMW,OAAO,GAAGhB,MAAM,CAAC,IAAD,CAAtB;AAEA,MAAMiB,YAAY,GAAGpB,KAAK,CAACqB,WAAN,CACnB,UAACC,CAAD,EAAe;AAAA,oBACkBA,CAAC,CAACC,MADpB;AAAA,QACNC,aADM,aACNA,aADM;AAAA,QACSC,KADT,aACSA,KADT;;AAEb,QAAIb,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACa,KAAD,EAAQD,aAAR,CAAb;AACD;AACF,GANkB,EAOnB,CAACZ,aAAD,CAPmB,CAArB;AAUA,SAEE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAED,OAAO,KAAK,KAAZ,GAAoB,IAApB,GAA2Be,SADvC;AAEE,IAAA,QAAQ,EAAEN,YAFZ;AAGE,IAAA,GAAG,EAAED,OAHP;AAIE,IAAA,KAAK,EAAEN;AAJT,KAKMK,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF;AAUD,CAlCwB,CAAzB;AAqCAR,MAAM,CAACiB,IAAP,GAAc1B,UAAd;AAEA,eAAeS,MAAf","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\nimport React from 'react';\r\nimport type {\r\n  ViewStyleProp,\r\n  TextStyleProp,\r\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\r\nimport type {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';\r\n// $FlowFixMe\r\nimport {createElement, unstable_createElement} from 'react-native';\r\nimport PickerItem from './PickerItem';\r\nimport {forwardRef, useRef} from 'react';\r\n\r\ntype PickerProps = {\r\n  ...ViewProps,\r\n  children?: typeof PickerItem | Array<typeof PickerItem>,\r\n  enabled?: boolean,\r\n  onValueChange?: (number | string, number) => void,\r\n  selectedValue?: number | string,\r\n  style?: ViewStyleProp,\r\n  /**\r\n   * dropdownIconColor\r\n   * Not used for Web.\r\n   */\r\n  dropdownIconColor?: string,\r\n  /* compat */\r\n  itemStyle?: TextStyleProp,\r\n  mode?: string,\r\n  prompt?: string,\r\n};\r\n\r\nconst myCreateElement = createElement || unstable_createElement;\r\n\r\nconst Select = forwardRef((props: any, forwardedRef) =>\r\n  myCreateElement('select', props),\r\n);\r\n\r\nconst Picker = forwardRef<PickerProps, *>((props, forwardedRef) => {\r\n  const {\r\n    enabled,\r\n    onValueChange,\r\n    selectedValue,\r\n    itemStyle,\r\n    mode,\r\n    prompt,\r\n    dropdownIconColor,\r\n    ...other\r\n  } = props;\r\n\r\n  const hostRef = useRef(null);\r\n\r\n  const handleChange = React.useCallback<any>(\r\n    (e: Object) => {\r\n      const {selectedIndex, value} = e.target;\r\n      if (onValueChange) {\r\n        onValueChange(value, selectedIndex);\r\n      }\r\n    },\r\n    [onValueChange],\r\n  );\r\n\r\n  return (\r\n    // $FlowFixMe\r\n    <Select\r\n      disabled={enabled === false ? true : undefined}\r\n      onChange={handleChange}\r\n      ref={hostRef}\r\n      value={selectedValue}\r\n      {...other}\r\n    />\r\n  );\r\n});\r\n\r\n// $FlowFixMe\r\nPicker.Item = PickerItem;\r\n\r\nexport default Picker;\r\n"]},"metadata":{},"sourceType":"module"}