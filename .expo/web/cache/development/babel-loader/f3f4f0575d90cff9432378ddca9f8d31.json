{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\funkw\\\\Desktop\\\\weightapp\\\\COVID-NineTeam\\\\components\\\\BarcodeScanner.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { sendApiRequest } from \"./Edamam\";\nimport styles from \"./globalstyles.js\";\nimport fire from \"./fire\";\nexport var BarcodeScanner = function BarcodeScanner() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageSwitch = _useState6[0],\n      setPageSwitch = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      calories = _useState8[0],\n      setCalories = _useState8[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  function pageSwitchHandler() {\n    setPageSwitch(!pageSwitch);\n  }\n\n  function CalorieCount() {\n    fire.database().ref('users/' + fire.auth().currentUser.email.replace('.', ',') + \"/caloriesConsumed\").on('value', function (snapshot) {\n      var data = snapshot.val();\n      setCalories(data);\n    });\n  }\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var data = _ref.data;\n    setScanned(true);\n    sendApiRequest(data);\n    setPageSwitch(true);\n    CalorieCount();\n    setScanned(false);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(React.Fragment, null, pageSwitch ? React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Calories: \", calories), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: pageSwitchHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Scan Again\"))) : React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: StyleSheet.absoluteFill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.scannerMask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/funkw/Desktop/weightapp/COVID-NineTeam/components/BarcodeScanner.js"],"names":["React","useState","useEffect","BarCodeScanner","sendApiRequest","styles","fire","BarcodeScanner","hasPermission","setHasPermission","scanned","setScanned","pageSwitch","setPageSwitch","calories","setCalories","requestPermissionsAsync","status","pageSwitchHandler","CalorieCount","database","ref","auth","currentUser","email","replace","on","snapshot","data","val","handleBarCodeScanned","container","loginBtn","undefined","StyleSheet","absoluteFill","scannerMask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity,Dimensions} from \"react-native\";\r\nimport {BarCodeScanner} from \"expo-barcode-scanner\";\r\nimport {sendApiRequest} from \"./Edamam\";\r\nimport styles from './globalstyles.js';\r\nimport fire from './fire';\r\n\r\n\r\n\r\nexport const BarcodeScanner = () => {\r\n    const [hasPermission, setHasPermission] = useState(null);\r\n    const [scanned, setScanned] = useState(false);\r\n    const [pageSwitch, setPageSwitch] = useState(false);\r\n    const [calories, setCalories] = useState(0);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const {status} = await BarCodeScanner.requestPermissionsAsync();\r\n            setHasPermission(status === 'granted');\r\n        })();\r\n    }, []);\r\n\r\n\r\n    //flip switch to transition back to barcode scanner\r\n    function pageSwitchHandler() {\r\n        setPageSwitch(!pageSwitch);\r\n    }\r\n    function CalorieCount() {\r\n        fire.database().ref('users/' + fire.auth().currentUser.email.replace('.',',') + \"/caloriesConsumed\").on('value',(snapshot => {\r\n            const data = snapshot.val();\r\n            setCalories(data);\r\n        }))\r\n    }\r\n//triggered after scanning barcode, flips switches and transitions to calorie view\r\n    const handleBarCodeScanned = ({data}) => {\r\n        setScanned(true);\r\n        sendApiRequest(data);\r\n        setPageSwitch(true);\r\n        CalorieCount();\r\n        setScanned(false);\r\n    };\r\n// prompt for permissions access from the user device\r\n    if (hasPermission === null) {\r\n        return <Text>Requesting for camera permission</Text>;\r\n    }\r\n    if (hasPermission === false) {\r\n        return <Text>No access to camera</Text>;\r\n    }\r\n// returns the page view for the barcode scanner\r\n    return (\r\n        <>\r\n\r\n        {pageSwitch ? (\r\n        <View style={styles.container}>\r\n            <Text>Calories: {calories}</Text>\r\n            <TouchableOpacity style={styles.loginBtn} onPress={pageSwitchHandler}>\r\n                <Text>Scan Again</Text>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n\r\n        ):(\r\n        <View style={styles.container}>\r\n            <BarCodeScanner\r\n                onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n                style={StyleSheet.absoluteFill}\r\n            />\r\n            <View style = {styles.scannerMask}/>\r\n        </View>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}